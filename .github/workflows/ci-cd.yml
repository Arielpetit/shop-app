name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 using AdoptOpenJDK (correct distribution)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install make and other necessary build tools
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y make

      # Install frontend dependencies and set up environment
      - name: Install frontend dependencies
        run: make frontend-install  # Use make frontend-install instead of npm install

      # Install hadolint for Dockerfile linting
      - name: Install hadolint
        run: |
          sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          sudo chmod +x /usr/local/bin/hadolint

      # Run Dockerfile lint checks
      - name: Run Dockerfile lint checks
        run: make lint

      # Run tests (frontend and backend)
      - name: Run tests
        run: make test

      # Build Maven package for backend
      - name: Build Maven package
        run: |
          cd shop-backend
          mvn clean package -DskipTests
          cd ..

      # Install Trivy from GitHub releases
      - name: Install Trivy
        run: |
          sudo curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.30.0/trivy_0.30.0_Linux-x86_64.deb -o trivy.deb
          sudo dpkg -i trivy.deb
          rm trivy.deb

      # Run Trivy scan
      - name: Run Trivy scan
        run: |
          trivy fs --exit-code 0 --severity HIGH,CRITICAL --format json --output trivy-report.json .

      # Send Trivy scan report to Discord
      - name: Send report to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}  # Inject secret variable
        run: |
          REPORT=$(cat trivy-report.json)
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"text\": \"Here is the Trivy scan report:\", \"attachments\":[{\"text\": \"$(echo "$REPORT" | jq . | head -c 1900)\"}]}" \
          $DISCORD_WEBHOOK_URL

      # Build Docker images (without pushing)
      - name: Build Docker images
        run: make docker-build-frontend docker-build-backend
